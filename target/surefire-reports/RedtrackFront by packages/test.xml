<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="MacBook-Pro-Dmitrij.local" ignored="0" name="test" tests="40" failures="3" timestamp="19 июл 2019 14:16:50 GMT" time="82.902" errors="0">
  <testcase name="login" time="0.0" classname="io.redtrack.app.tests.RedtrackStatsTests">
    <failure type="org.testng.TestNGException" message="
Cannot inject @Test annotated Method [login] with [class org.openqa.selenium.remote.RemoteWebDriver].
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Cannot inject @Test annotated Method [login] with [class org.openqa.selenium.remote.RemoteWebDriver].
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection
at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:407)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:356)
at org.testng.internal.Parameters.createParameters(Parameters.java:635)
at org.testng.internal.Parameters.handleParameters(Parameters.java:769)
at org.testng.internal.ParameterHandler.handleParameters(ParameterHandler.java:49)
at org.testng.internal.ParameterHandler.createParameters(ParameterHandler.java:37)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:924)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- login -->
  <testcase name="InvalidLogin" time="7.601" classname="io.redtrack.app.tests.RedtrackLogin"/>
  <testcase name="campaignsPage" time="0.0" classname="io.redtrack.app.tests.RedtrackStatsTests">
    <skipped/>
  </testcase> <!-- campaignsPage -->
  <testcase name="login" time="5.825" classname="io.redtrack.app.tests.RedtrackCustomDomains"/>
  <testcase name="setCustomPeriod" time="0.0" classname="io.redtrack.app.tests.RedtrackStatsTests">
    <skipped/>
  </testcase> <!-- setCustomPeriod -->
  <testcase name="navToDomains" time="8.558" classname="io.redtrack.app.tests.RedtrackCustomDomains"/>
  <testcase name="offQuickStat" time="0.0" classname="io.redtrack.app.tests.RedtrackStatsTests">
    <skipped/>
  </testcase> <!-- offQuickStat -->
  <testcase name="upperCaseLogin" time="15.795" classname="io.redtrack.app.tests.RedtrackLogin"/>
  <testcase name="setDate" time="0.0" classname="io.redtrack.app.tests.RedtrackStatsTests">
    <skipped/>
  </testcase> <!-- setDate -->
  <testcase name="Login" time="0.0" classname="io.redtrack.app.tests.RedtrackLogin">
    <failure type="org.testng.TestNGException" message="
Cannot inject @Test annotated Method [Login] with [class org.openqa.selenium.remote.RemoteWebDriver].
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Cannot inject @Test annotated Method [Login] with [class org.openqa.selenium.remote.RemoteWebDriver].
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection
at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:407)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:356)
at org.testng.internal.Parameters.createParameters(Parameters.java:635)
at org.testng.internal.Parameters.handleParameters(Parameters.java:769)
at org.testng.internal.ParameterHandler.handleParameters(ParameterHandler.java:49)
at org.testng.internal.ParameterHandler.createParameters(ParameterHandler.java:37)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:924)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- Login -->
  <testcase name="closingDrvr" time="0.154" classname="io.redtrack.app.tests.RedtrackLogin"/>
  <testcase name="checkingCPC" time="0.0" classname="io.redtrack.app.tests.RedtrackStatsTests">
    <skipped/>
  </testcase> <!-- checkingCPC -->
  <testcase name="checkingProfit" time="0.0" classname="io.redtrack.app.tests.RedtrackStatsTests">
    <skipped/>
  </testcase> <!-- checkingProfit -->
  <testcase name="checkingCPT" time="0.0" classname="io.redtrack.app.tests.RedtrackStatsTests">
    <skipped/>
  </testcase> <!-- checkingCPT -->
  <testcase name="checkCPA" time="0.0" classname="io.redtrack.app.tests.RedtrackStatsTests">
    <skipped/>
  </testcase> <!-- checkCPA -->
  <testcase name="checkEPC" time="0.0" classname="io.redtrack.app.tests.RedtrackStatsTests">
    <skipped/>
  </testcase> <!-- checkEPC -->
  <testcase name="checkTR" time="0.0" classname="io.redtrack.app.tests.RedtrackStatsTests">
    <skipped/>
  </testcase> <!-- checkTR -->
  <testcase name="checkCR" time="0.0" classname="io.redtrack.app.tests.RedtrackStatsTests">
    <skipped/>
  </testcase> <!-- checkCR -->
  <testcase name="checkROI" time="0.0" classname="io.redtrack.app.tests.RedtrackStatsTests">
    <skipped/>
  </testcase> <!-- checkROI -->
  <testcase name="openCreateDomain" time="5.373" classname="io.redtrack.app.tests.RedtrackCustomDomains"/>
  <testcase name="inputName" time="5.444" classname="io.redtrack.app.tests.RedtrackCustomDomains"/>
  <testcase name="inputURL" time="5.408" classname="io.redtrack.app.tests.RedtrackCustomDomains"/>
  <testcase name="getName" time="0.504" classname="io.redtrack.app.tests.RedtrackCustomDomains"/>
  <testcase name="saveDomain" time="5.435" classname="io.redtrack.app.tests.RedtrackCustomDomains"/>
  <testcase name="goToCampaignPage" time="5.442" classname="io.redtrack.app.tests.RedtrackCustomDomains"/>
  <testcase name="openCampaign" time="13.234" classname="io.redtrack.app.tests.RedtrackCustomDomains"/>
  <testcase name="chooseDomain" time="13.501" classname="io.redtrack.app.tests.RedtrackCustomDomains"/>
  <testcase name="saveCamp" time="0.228" classname="io.redtrack.app.tests.RedtrackCustomDomains">
    <failure type="org.openqa.selenium.WebDriverException" message="unknown error: Element &amp;lt;span&amp;gt;...&amp;lt;/span&amp;gt; is not clickable at point (535, 138). Other element would receive the click: &amp;lt;div class=&amp;quot;navbar-collapse collapse&amp;quot;&amp;gt;...&amp;lt;/div&amp;gt;
  (Session info: chrome=73.0.3683.75)
  (Driver info: chromedriver=73.0.3683.68 (47787ec04b6e38e22703e856e101e840b65afe72),platform=Linux 4.4.0-138-generic x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: &amp;apos;3.14.0&amp;apos;, revision: &amp;apos;aacccce0&amp;apos;, time: &amp;apos;2018-08-02T20:19:58.91Z&amp;apos;
System info: host: &amp;apos;MacBook-Pro-Dmitrij.local&amp;apos;, ip: &amp;apos;fe80:0:0:0:189b:5ec1:a089:dbcb%en0&amp;apos;, os.name: &amp;apos;Mac OS X&amp;apos;, os.arch: &amp;apos;x86_64&amp;apos;, os.version: &amp;apos;10.13.4&amp;apos;, java.version: &amp;apos;1.8.0_201&amp;apos;
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 73.0.3683.68 (47787ec04b6e3..., userDataDir: /tmp/.com.google.Chrome.yOxnSm}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:38229}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 73.0.3683.75, webStorageEnabled: true}
Session ID: bec49c0e70eeb25fcfc3b58445165a0c">
      <![CDATA[org.openqa.selenium.WebDriverException: unknown error: Element <span>...</span> is not clickable at point (535, 138). Other element would receive the click: <div class="navbar-collapse collapse">...</div>
  (Session info: chrome=73.0.3683.75)
  (Driver info: chromedriver=73.0.3683.68 (47787ec04b6e38e22703e856e101e840b65afe72),platform=Linux 4.4.0-138-generic x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 0 milliseconds
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'MacBook-Pro-Dmitrij.local', ip: 'fe80:0:0:0:189b:5ec1:a089:dbcb%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.4', java.version: '1.8.0_201'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 73.0.3683.68 (47787ec04b6e3..., userDataDir: /tmp/.com.google.Chrome.yOxnSm}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:38229}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), rotatable: false, setWindowRect: true, strictFileInteractability: false, takesHeapSnapshot: true, takesScreenshot: true, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 73.0.3683.75, webStorageEnabled: true}
Session ID: bec49c0e70eeb25fcfc3b58445165a0c
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:214)
at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:166)
at org.openqa.selenium.remote.http.JsonHttpResponseCodec.reconstructValue(JsonHttpResponseCodec.java:40)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:80)
at org.openqa.selenium.remote.http.AbstractHttpResponseCodec.decode(AbstractHttpResponseCodec.java:44)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:276)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:83)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy7.click(Unknown Source)
at io.redtrack.app.pages.Campaigns.saveCamp(Campaigns.java:80)
at io.redtrack.app.tests.RedtrackCustomDomains.saveCamp(RedtrackCustomDomains.java:257)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
    </failure>
  </testcase> <!-- saveCamp -->
  <testcase name="getClickURL" time="0.0" classname="io.redtrack.app.tests.RedtrackCustomDomains">
    <skipped/>
  </testcase> <!-- getClickURL -->
  <testcase name="creatingClick" time="0.0" classname="io.redtrack.app.tests.RedtrackCustomDomains">
    <skipped/>
  </testcase> <!-- creatingClick -->
  <testcase name="parsingURL" time="0.0" classname="io.redtrack.app.tests.RedtrackCustomDomains">
    <skipped/>
  </testcase> <!-- parsingURL -->
  <testcase name="creatingConversion" time="0.0" classname="io.redtrack.app.tests.RedtrackCustomDomains">
    <skipped/>
  </testcase> <!-- creatingConversion -->
  <testcase name="parsingID" time="0.0" classname="io.redtrack.app.tests.RedtrackCustomDomains">
    <skipped/>
  </testcase> <!-- parsingID -->
  <testcase name="checkingPostback" time="0.0" classname="io.redtrack.app.tests.RedtrackCustomDomains">
    <skipped/>
  </testcase> <!-- checkingPostback -->
  <testcase name="findPostback" time="0.0" classname="io.redtrack.app.tests.RedtrackCustomDomains">
    <skipped/>
  </testcase> <!-- findPostback -->
  <testcase name="checkingConv" time="0.0" classname="io.redtrack.app.tests.RedtrackCustomDomains">
    <skipped/>
  </testcase> <!-- checkingConv -->
  <testcase name="findConv" time="0.0" classname="io.redtrack.app.tests.RedtrackCustomDomains">
    <skipped/>
  </testcase> <!-- findConv -->
  <testcase name="backToDomains" time="0.0" classname="io.redtrack.app.tests.RedtrackCustomDomains">
    <skipped/>
  </testcase> <!-- backToDomains -->
  <testcase name="deleteDomain" time="0.0" classname="io.redtrack.app.tests.RedtrackCustomDomains">
    <skipped/>
  </testcase> <!-- deleteDomain -->
  <testcase name="closingDriver" time="0.0" classname="io.redtrack.app.tests.RedtrackCustomDomains">
    <skipped/>
  </testcase> <!-- closingDriver -->
</testsuite> <!-- test -->
